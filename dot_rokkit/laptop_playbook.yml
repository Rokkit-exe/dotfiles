- name: Setup Ubuntu Laptop (Gnome)
  hosts: localhost
  become: true
  vars:
    playbook_dir: "/home/frank/.local/share/chezmoi/dot_playbook"
    script_dir: "{{ playbook_dir }}/scripts"
    service_dir: "{{ playbook_dir }}/services"
    apt_packages:
<<<<<<< HEAD:dot_rokkit/laptop_playbook.yml

    snap_packages:
      - chezmoi --classic
      - discord
      - go --classic

=======
      - 7zip
      - ansible
      - curl
      - dconf-editor
      - docker
      - filezilla
      - firefox
      - git
      - htop
      - kitty
      - kodi
      - libreoffice
      - mariadb-server
      - nano
      - neofetch
      - neovim
      - net-tools
      - nodejs
      - npm
      - openssh-server
      - openvpn
      - thunderbird
      - unzip
      - vim
      - vlc
      - wget
      - zsh
    flatpak_packages:
      - com.discordapp.Discord
      - com.getpostman.Postman
      - com.obsproject.Studio
>>>>>>> 207dd12 (adding laptop config):dot_playbook/laptop_playbook.yml

  tasks:
    - name: update the system
      shell: sudo apt update -y && sudo apt full-upgrade -y
      tags: update

    - name: Install apt packages
      shell: sudo apt install -y {{ item }}
      loop: "{{ apt_packages }}"
      tags: apt
      when: ansible_distribution == 'Ubuntu'

<<<<<<< HEAD:dot_rokkit/laptop_playbook.yml
    - name: Install Snap packages
      shell: sudo snap install {{ item }}
      loop: "{{ snap_packages }}"
=======
    - name: Install flatpak packages
      shell: flatpak install -y flathub {{ item }}
      loop: "{{ flatpak_packages }}"
      tags: flatpak
>>>>>>> 207dd12 (adding laptop config):dot_playbook/laptop_playbook.yml
      when: ansible_distribution == 'Ubuntu'

    - name: Install lazyvim
      shell: "{{ script_dir }}/install_lazyvim.sh"
      tags: lazyvim

    - name: Setting up ZSH (Oh-My-Posh + Powerlevel10k)
      shell: "{{ script_dir }}/setting_up_zsh.sh"
      tags: zsh

    - name: Install Docker
      shell: "{{ script_dir }}/docker_ubuntu_install.sh"
      tags: docker
      when: ansible_distribution == 'Ubuntu'

